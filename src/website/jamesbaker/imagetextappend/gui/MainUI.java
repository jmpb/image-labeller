/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package website.jamesbaker.imagetextappend.gui;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import website.jamesbaker.imagetextappend.core.DataEntry;
import website.jamesbaker.imagetextappend.core.ImageTextAppend;

/**
 *
 * @author James
 */
public class MainUI extends javax.swing.JFrame {
    
    private ImageTextAppend imgTxtApp;
    private File imageDir;

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        imgTxtApp = new ImageTextAppend();
        
    }
    
    private void populateEntryList() {
        dataEntryList.setListData(imgTxtApp.getEntryRepList());
    }
    
    private void showImage(String imagePath) {
        ImageIcon imgIcn = new ImageIcon(imagePath);
        Image iconImg = imgIcn.getImage();
        Image newImg = iconImg.getScaledInstance(imgLabel.getWidth(),
                imgLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        imgLabel.setIcon(image);
    }
    
    private void showEntryData() {
        DataEntry entry = imgTxtApp.getDataEntryByRow(dataEntryList.getSelectedIndex());
        skuInput.setText(entry.sku);
        nameInput.setText(entry.name);
        imageInput.setText(entry.image);
        existingTextInput.setText(entry.imageLabel);
        altTextInput.setText(entry.imageLabel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        folderChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataEntryList = new javax.swing.JList<>();
        imagePanel = new javax.swing.JPanel();
        imgLabel = new javax.swing.JLabel();
        skuLabel = new javax.swing.JLabel();
        skuInput = new javax.swing.JTextField();
        nameInput = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        imageInput = new javax.swing.JTextField();
        existingTextInput = new javax.swing.JTextField();
        existingTextLabel = new javax.swing.JLabel();
        altTextLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        altTextInput = new javax.swing.JTextArea();
        nextBtn = new javax.swing.JButton();
        writeExitBtn = new javax.swing.JButton();
        writeBtn = new javax.swing.JButton();
        prevBtn = new javax.swing.JButton();
        openXlsxBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuWriteFile = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenuItem();

        fileChooser.setFileFilter(new FileNameExtensionFilter("Microsoft Excel Documents", "xlsx"));

        folderChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setLocation(new java.awt.Point(300, 300));

        dataEntryList.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                dataEntryListComponentShown(evt);
            }
        });
        dataEntryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dataEntryListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(dataEntryList);

        imagePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        skuLabel.setText("SKU:");

        skuInput.setEditable(false);
        skuInput.setBackground(new java.awt.Color(204, 204, 204));

        nameInput.setEditable(false);
        nameInput.setBackground(new java.awt.Color(204, 204, 204));

        nameLabel.setText("Name:");

        imageLabel.setText("Image:");

        imageInput.setEditable(false);
        imageInput.setBackground(new java.awt.Color(204, 204, 204));

        existingTextInput.setEditable(false);

        existingTextLabel.setText("Current label:");

        altTextLabel.setText("Edit text:");

        altTextInput.setColumns(20);
        altTextInput.setLineWrap(true);
        altTextInput.setRows(5);
        altTextInput.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                altTextInputInputMethodTextChanged(evt);
            }
        });
        altTextInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                altTextInputKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(altTextInput);

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        writeExitBtn.setText("Write & Exit");
        writeExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeExitBtnActionPerformed(evt);
            }
        });

        writeBtn.setText("Write to File");
        writeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeBtnActionPerformed(evt);
            }
        });

        prevBtn.setText("Previous");
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(imagePanelLayout.createSequentialGroup()
                        .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(skuLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(existingTextLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(prevBtn))
                        .addGap(10, 10, 10)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skuInput, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(imagePanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                                .addComponent(nextBtn))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(altTextLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createSequentialGroup()
                                .addComponent(writeBtn)
                                .addGap(18, 18, 18)
                                .addComponent(writeExitBtn)))))
                .addContainerGap())
        );

        imagePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {existingTextInput, imageInput, nameInput, skuInput});

        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(imagePanelLayout.createSequentialGroup()
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(writeExitBtn)
                            .addComponent(writeBtn))
                        .addGap(25, 25, 25)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(skuInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skuLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imageLabel)
                            .addComponent(imageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(existingTextLabel)
                            .addComponent(existingTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(altTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextBtn)
                            .addComponent(prevBtn)))
                    .addGroup(imagePanelLayout.createSequentialGroup()
                        .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        openXlsxBtn.setText("Open XLSX");
        openXlsxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openXlsxBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openXlsxBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(openXlsxBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenu1.setText("File");
        jMenu1.setToolTipText("");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        menuWriteFile.setText("Write to File");
        menuWriteFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuWriteFileActionPerformed(evt);
            }
        });
        jMenu1.add(menuWriteFile);

        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataEntryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dataEntryListValueChanged
        // TODO add your handling code here:
        int selectionIndex = dataEntryList.getSelectedIndex();
        String imageToLoad = imgTxtApp.getDataEntryByRow(selectionIndex).image;
        showImage(imageToLoad);
        showEntryData();
        
    }//GEN-LAST:event_dataEntryListValueChanged

    private void dataEntryListComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_dataEntryListComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_dataEntryListComponentShown

    private void openXlsxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openXlsxBtnActionPerformed
        int returnVal = fileChooser.showOpenDialog(rootPane);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            imgTxtApp.readFile(file.getPath());
            populateEntryList();
        }
        
    }//GEN-LAST:event_openXlsxBtnActionPerformed

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBtnActionPerformed
        dataEntryList.setSelectedIndex(dataEntryList.getSelectedIndex()-1);
    }//GEN-LAST:event_prevBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        dataEntryList.setSelectedIndex(dataEntryList.getSelectedIndex()+1);
    }//GEN-LAST:event_nextBtnActionPerformed

    private void writeExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeExitBtnActionPerformed
        if (imgTxtApp.hasData()) {
            imgTxtApp.writeFile();
        }
        System.exit(0);
    }//GEN-LAST:event_writeExitBtnActionPerformed

    private void writeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeBtnActionPerformed
        if (imgTxtApp.hasData()) {
            imgTxtApp.writeFile();
        }
    }//GEN-LAST:event_writeBtnActionPerformed

    private void altTextInputInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_altTextInputInputMethodTextChanged
        
    }//GEN-LAST:event_altTextInputInputMethodTextChanged

    private void altTextInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_altTextInputKeyReleased
        existingTextInput.setText(altTextInput.getText());
        imgTxtApp.getDataEntryByRow(dataEntryList.getSelectedIndex()).imageLabel =
                altTextInput.getText();
    }//GEN-LAST:event_altTextInputKeyReleased

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void menuWriteFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuWriteFileActionPerformed
        if (imgTxtApp.hasData()) {
            imgTxtApp.writeFile();
        }
    }//GEN-LAST:event_menuWriteFileActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea altTextInput;
    private javax.swing.JLabel altTextLabel;
    private javax.swing.JList<String> dataEntryList;
    private javax.swing.JTextField existingTextInput;
    private javax.swing.JLabel existingTextLabel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JFileChooser folderChooser;
    private javax.swing.JTextField imageInput;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuWriteFile;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton openXlsxBtn;
    private javax.swing.JButton prevBtn;
    private javax.swing.JTextField skuInput;
    private javax.swing.JLabel skuLabel;
    private javax.swing.JButton writeBtn;
    private javax.swing.JButton writeExitBtn;
    // End of variables declaration//GEN-END:variables
}
